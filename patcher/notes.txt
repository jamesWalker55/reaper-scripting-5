fxidx	fxpath	flags
0	{ 0 }	0
1	{ 1 }	0
2	{ 2 }	0
3	{ 3 }	0
4	{ 4 }	0
5	{ 5 }	0
11	{ 3, 0 }	10000000000000000000000000
18	{ 3, 1 }	10000000000000000000000000
25	{ 3, 2 }	10000000000000000000000000 (3+1) + (6 + 1) * (2 + 1)
32	{ 3, 3 }	10000000000000000000000000
39	{ 3, 4 }	10000000000000000000000000
46	{ 3, 5 }	10000000000000000000000000
53	{ 3, 6 }	10000000000000000000000000
60	{ 3, 7 }	10000000000000000000000000
67	{ 3, 8 }	10000000000000000000000000
95	{ 3, 2, 0 }	10000000000000000000000000 25 + (69 + 1) * 1
165	{ 3, 2, 1 }	10000000000000000000000000
235	{ 3, 2, 2 }	10000000000000000000000000
375	{ 3, 2, 0, 0 }	10000000000000000000000000
655	{ 3, 2, 0, 1 }	10000000000000000000000000
935	{ 3, 2, 0, 2 }	10000000000000000000000000
1215	{ 3, 2, 0, 3 }	10000000000000000000000000
1495	{ 3, 2, 0, 4 }	10000000000000000000000000
1775	{ 3, 2, 0, 5 }	10000000000000000000000000
2055	{ 3, 2, 0, 6 }	10000000000000000000000000
2335	{ 3, 2, 0, 7 }	10000000000000000000000000
2615	{ 3, 2, 0, 8 }	10000000000000000000000000
2895	{ 3, 2, 0, 9 }	10000000000000000000000000
3175	{ 3, 2, 0, 10 }	10000000000000000000000000
3455	{ 3, 2, 0, 11 }	10000000000000000000000000
3735	{ 3, 2, 0, 12 }	10000000000000000000000000
4015	{ 3, 2, 0, 13 }	10000000000000000000000000
4295	{ 3, 2, 0, 14 }	10000000000000000000000000
8215	{ 3, 2, 0, 12, 0 }	10000000000000000000000000


8215	{ 3, 2, 0, 12, 0 } ->
Ai = 3
Alen = 6
Bi = 2
Blen = 9
Ci = 0
Clen = 3
Di = 12
Dlen = 15
Ei = 0
Elen = 1

math:
Anorm = 3
A = 4
Alast = Alen
B = 25 = (3+1) + (6 + 1) * (2 + 1)
Blast = 69 = (5+1) + (6 + 1) * (9)
C = 95 = 25 + (Blast + 1) * (0 + 1)
Clast = 279 = 69 + (69 + 1) * 3
D = 3735 = 95 + 280 * (12 + 1)
Dlast = 4479 = 279 + (279 + 1) * 15
E = 8215 = 3735 + (4479 + 1) * (0 + 1)




levels:

A = Ai + 1
Alast = Alen

B = A + (Alast + 1) * (Bi + 1)
Blast = Alast + (Alast + 1) * Blen

C = B + (Blast + 1) * (Ci + 1)
Clast = Blast + (Blast + 1) * Clen

D = C + (Clast + 1) * (Di + 1)
Dlast = Clast + (Clast + 1) * Dlen

E = D + (Dlast + 1) * (Ei + 1)
E = (
  Ai + 1
  + (Alen + 1) * (Bi + 1)
  + (Alen + 1 + (Alen + 1) * Blen) * (Ci + 1)
  + (Alen + 1 + (Alen + 1) * Blen + (Alen + (Alen + 1) * Blen + 1) * Clen) * (Di + 1)
  + (Alen + 1 + (Alen + 1) * Blen + (Alen + (Alen + 1) * Blen + 1) * Clen + (Alen + (Alen + 1) * Blen + (Alen + (Alen + 1) * Blen + 1) * Clen + 1) * Dlen) * (Ei + 1)
)
E = (
  Ai + 1
  + (Alen + 1) * (Bi + 1)
  + ((Alen + 1) + (Alen + 1) * Blen) * (Ci + 1)
  + ((Alen + 1) + (Alen + 1) * Blen + ((Alen + 1) + (Alen + 1) * Blen) * Clen) * (Di + 1)
  + ((Alen + 1) + (Alen + 1) * Blen + ((Alen + 1) + (Alen + 1) * Blen) * Clen + ((Alen + 1) + (Alen + 1) * Blen + (Alen + (Alen + 1) * Blen + 1) * Clen) * Dlen) * (Ei + 1)
)
E = (
  Ai + 1
  + (Alen + 1) * (Bi + 1)
  + (Alen + 1) * (Blen + 1) * (Ci + 1)
  + ((Alen + 1) * (Blen + 1) + ((Alen + 1) * (Blen + 1)) * Clen) * (Di + 1)
  + ((Alen + 1) * (Blen + 1) + ((Alen + 1) * (Blen + 1)) * Clen + ((Alen + 1) * (Blen + 1) + (Alen + (Alen + 1) * Blen + 1) * Clen) * Dlen) * (Ei + 1)
)
E = (
  Ai + 1
  + (Alen + 1) * (Bi + 1)
  + (Alen + 1) * (Blen + 1) * (Ci + 1)
  + (Alen + 1) * (Blen + 1) * (Clen + 1) * (Di + 1)
  + ((Alen + 1) * (Blen + 1) * (Clen + 1) + (Alen + 1) * (Blen + 1) * (Clen + 1) * Dlen) * (Ei + 1)
)
E = (
  (Ai + 1)
  + (Alen + 1) * (Bi + 1)
  + (Alen + 1) * (Blen + 1) * (Ci + 1)
  + (Alen + 1) * (Blen + 1) * (Clen + 1) * (Di + 1)
  + (Alen + 1) * (Blen + 1) * (Clen + 1) * (Dlen + 1) * (Ei + 1)
)
E = (
  (Ai + 1) + (Alen + 1) * (
    (Bi + 1) + (Blen + 1) * (
      (Ci + 1) + (Clen + 1) * (
        (Di + 1) + (Dlen + 1) * (
          (Ei + 1)
        )
      )
    )
  )
)

  (Alen + 1) * (Blen + 1) + ((Alen + 1) * (Blen + 1)) * Clen
= (Alen + 1) * (Blen + 1) * (Clen + 1)

  (Alen + 1) + (Alen + 1) * Blen
= (Alen + 1) * (Blen + 1)




Alen + (Alen + 1) * Blen





```
Ai, Alen, Bi, Blen, Ci, Clen, Di, Dlen, Ei, Elen = symbols("A_i A_len B_i B_len C_i C_len D_i D_len E_i E_len")
Ai, Alen, Bi, Blen, Ci, Clen, Di, Dlen, Ei, Elen = symbols("Ai Alen Bi Blen Ci Clen Di Dlen Ei Elen")


A = Ai + 1
B = A + (Alen + 1) * (Bi + 1)
Blast = Alen + (Alen + 1) * Blen
C = B + (Blast + 1) * (Ci + 1)
Clast = Blast + (Blast + 1) * Clen
D = C + (Clast + 1) * (Di + 1)
Dlast = Clast + (Clast + 1) * Dlen
E = D + (Dlast + 1) * (Ei + 1)


